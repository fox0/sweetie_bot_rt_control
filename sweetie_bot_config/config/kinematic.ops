# Загрузка поддержки взаимодействия с ROS
import("rtt_ros");
ros.import("rtt_sensor_msgs")
ros.import("rtt_sweetie_bot_kinematics_msgs")

ros.import("rtt_rospack");  # Разрешение путей ROS: операци ros.find(<package name>)
ros.import("rtt_rosparam");

require("print");
import("sweetie_bot_kinematics");
import("sweetie_bot_robot_model");

loadComponent("sweetie_bot_kinematics", "sweetie_bot::Kinematics");
loadService("sweetie_bot_kinematics","rosparam");
loadService("sweetie_bot_kinematics","marshalling"); # Поддержка исполнения скрип:тов и загрузки xml/cpf файлов

# Загружаем параметры из xml файла.
sweetie_bot_kinematics.marshalling.loadProperties(ros.find("sweetie_bot_config") + "/config/chains.cpf");
sweetie_bot_kinematics.rosparam.getParam("/", "robot_model")

## Create connections
stream("sweetie_bot_kinematics.in_joints_seed_sorted", ros.topic("/kinematics/input_joint_seed"))
stream("sweetie_bot_kinematics.in_joints_sorted", ros.topic("/kinematics/input_joint_state"))
stream("sweetie_bot_kinematics.in_limbs", ros.topic("/kinematics/input_limb_state"))
stream("sweetie_bot_kinematics.out_joints", ros.topic("/kinematics/output_joint_state"))
stream("sweetie_bot_kinematics.out_limbs", ros.topic("/kinematics/output_limb_state"))

sweetie_bot_kinematics.configure();
sweetie_bot_kinematics.start();
