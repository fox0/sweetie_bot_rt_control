# Загрузка поддержки взаимодействия с ROS
import("rtt_ros");
ros.import("rtt_sensor_msgs")
ros.import("rtt_sweetie_bot_kinematics_msgs")

ros.import("rtt_rospack");  # Разрешение путей ROS: операци ros.find(<package name>)
ros.import("rtt_rosparam");

require("print");
import("sweetie_bot_robot_model");
import("sweetie_bot_agregator");
import("sweetie_bot_kinematics");

loadComponent("sweetie_bot_agregator", "Sweetie_bot_agregator");
loadService("sweetie_bot_agregator","rosparam");
loadService("sweetie_bot_agregator","marshalling"); # Поддержка исполнения скриптов и загрузки xml/cpf файлов

## Create connections
#stream("sweetie_bot_agregator.input_joint_state", ros.topic("input_joint_state"))
stream("sweetie_bot_agregator.output_joint_state", ros.topic("output_joint_state"))

# Загружаем параметры из xml файла.
sweetie_bot_agregator.marshalling.loadProperties(ros.find("sweetie_bot_config") + "/config/chains.cpf");
sweetie_bot_agregator.rosparam.getParam("/", "robot_model")

loadComponent("sweetie_bot_kinematics", "Sweetie_bot_kinematics");
loadService("sweetie_bot_kinematics","rosparam");
loadService("sweetie_bot_kinematics","marshalling"); # Поддержка исполнения скриптов и загрузки xml/cpf файлов

## Create connections
#stream("sweetie_bot_kinematics.input_joint_state", ros.topic("input_joint_state"))
stream("sweetie_bot_kinematics.input_limbs_cartesian", ros.topic("input_limbs_cartesian"))
#stream("sweetie_bot_kinematics.output_joint_state", ros.topic("output_joint_state"))
#stream("sweetie_bot_kinematics.output_limbs_cartesian", ros.topic("output_limbs_cartesian"))

# Create an unbuffered 'shared data' connection:
#policy = RTT::ConnPolicy::data();
#a_port.connectTo( &c_port, policy );
connect( "sweetie_bot_kinematics.output_joint_state", "sweetie_bot_agregator.input_joint_state", ConnPolicy() )

# Загружаем параметры из xml файла.
sweetie_bot_kinematics.marshalling.loadProperties(ros.find("sweetie_bot_config") + "/config/chains.cpf");
sweetie_bot_kinematics.rosparam.getParam("/", "robot_model")

sweetie_bot_agregator.configure();
sweetie_bot_agregator.start();

sweetie_bot_kinematics.configure();
sweetie_bot_kinematics.start();
